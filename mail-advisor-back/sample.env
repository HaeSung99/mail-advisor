# ==========================================
# Mail Advisor - 환경 변수
# ==========================================
#
# 사용 방법:
#   1. 이 파일을 .env로 복사: cp sample.env .env
#   2. 아래 변수들의 값을 실제 값으로 변경
#   3. Docker 재시작: docker-compose down && docker-compose up -d --build
#
# 주의: .env 파일은 Git에 커밋하지 마세요!

# ==========================================
# OpenAI API (필수)
# ==========================================
# 발급: https://platform.openai.com/api-keys
# AI 메일 재작성 기능에 필요
OPENAI_API_KEY=

# ==========================================
# JWT 인증 (필수)
# ==========================================
# JWT 서명용 시크릿 키 (32자 이상 랜덤 문자열 권장)
# 생성 예시: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=

# Access Token 만료 시간 (기본: 1시간)
JWT_ACCESS_EXPIRES_IN=1h

# Refresh Token 만료 시간 (기본: 1일)
JWT_REFRESH_EXPIRES_IN=1d

# ==========================================
# MySQL 데이터베이스 (필수)
# ==========================================
# Docker 사용 시: mysql
# 로컬 개발 시: localhost
DB_HOST=mysql

# MySQL 포트
DB_PORT=3306

# 데이터베이스 사용자명
DB_USERNAME=mailadvisor

# 데이터베이스 사용자 비밀번호 (8자 이상 권장)
DB_PASSWORD=

# 데이터베이스 이름
DB_DATABASE=mailadvisor_db

# MySQL Root 비밀번호 (Docker Compose용)
MYSQL_ROOT_PASSWORD=

# 외부 접속 포트 (기본: 3306)
MYSQL_PORT=3306

# ==========================================
# 토스페이먼츠 결제 (선택 - 결제 기능 사용 시만)
# ==========================================
# 발급: https://developers.tosspayments.com
# 테스트: test_ck_, test_sk_ 로 시작
# 운영: live_ck_, live_sk_ 로 시작 (실제 결제 발생)
TOSS_CLIENT_KEY=
TOSS_SECRET_KEY=

# ==========================================
# 서버 설정 (선택)
# ==========================================
# 서버 포트
PORT=3000

# 실행 환경 (development | production | test)
NODE_ENV=development

# CORS 허용 Origin (쉼표로 구분)
# 개발: * (전체 허용)
# 운영: https://yourdomain.com 등 특정 도메인
CORS_ORIGIN=*

# ==========================================
# 기타 설정 (선택)
# ==========================================
# 로그 레벨 (error | warn | info | debug)
LOG_LEVEL=info

# 신규 가입 시 지급할 기본 토큰
DEFAULT_TOKEN_AMOUNT=0

# bcrypt Salt Rounds
BCRYPT_SALT_ROUNDS=10
